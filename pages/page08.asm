*
* MAIN COMMAND/CONTROL LOOP
*
CONTRL EQU    *
*
* RESTORE STACK POINTER REGISTER
*
       LDS    SP       SP WAS INITIALIZED EARLIER
*
       LDAA   ACIAT    GET PROPER ACIA INIT BITS
*                      FOR USER'S TERMINAL
       STAA   ACIAS    INZ ACIA
*
       CLR    OUTSW    MAKE SURE INPUT IS ECHOED
*
       LDX    #MCLOFF  TERMINAL INIT STRING
       JSR    PDATA1   PRINT DATA STRING
*
       BSR    INCH1    READ COMMAND CHARACTER
       TAB             SAVE CHARACTER IN B
       BRA    CNTA     SKIP OVER MIKBUG 1.0 VECTOR
OUT2   BRA    OUTCH1   MIKBUG 1.0 ; OUTPUT 1 CHAR ROUTINE
CNTA   JSR    OUTS     PRINT SPACE AFTER COMMAND
*
* B REGISTER HOLDS CHARACTER INPUT BY USER
* USE JUMP TABLE TO GO TO APPROPRIATE ROUTINE.
*
       LDX    #FCTABL  X:= ADDRESS OF JUMP TABLE
NXTCHR CMPB   0,X      DOES INPUT CHAR MATCH?
       BEQ    GOODCH   YES, GOTO APROPRIATE ROUTINE
       INX             ELSE, UPDATE INDEX INTO TABLE
       INX
       INX
       CPX    #FCTBEN  END OF TABLE REACHED?
       BNE    NXTCHR   NO, TRY NEXT CHAR
       BRA    CONTRL   NO MATCH, REPROMPT USER
*
*
GOODCH LDX    1,X      GET ADDRESS FROM J.T.
       JMP    0,X      GOTO APPROPRIATE ROUTINE
*
*
* NMI ENTRY
*
NMI    STS    SP       SAVE STACK
       JSR    PCRLF
       LDAA   #'B      PRINT B
       BSR    OUT2
       JSR    OUTS
       LDAA   #2       REMOVE BREAKPOINTS
       BSR    BRKSUB
       BRA    PSTAK1
*
* SET SPEED FOR USER TTY
*
SPD    BSR    INCH2    INPUT CHAR
       CMPA   #'1
