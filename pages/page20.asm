*************************
*
* OPBCYT
*
* THIS ROUTINE DETERMINES THE # OF BYTES IN AN INSTRUCTION
* GIVEN ITS OP CODE.
*
* INPUT: A HOLDS THE OP CODE
*
* OUTPUT: X HOLDS THE INDEX OF TABLE ELEMENT
* B NOT RESTORED
* A HOLDS # BYTES IN INSTRUCTION
* EXCEPT FOR BRANCHES IN WHICH CASE IS NEGATIVE
*
************************
*
OPCBYT EQU    *
       TAB             B:= OP CODE
       LSRA
       LSRA
       LSRA            PUT 4 UPPER BITS OF OP CODE IN
       LSRA            LOWER 4 BITS OF A
*
       LDX    #OPBTTB  X:= ADDRESS OF TABLE
       BSR    INX      INCREMENT X TO POINT TO CORRECT
*
       LDA    0,X      GET TABLE ENTRY
       BNE    OPBTRT   IF NOT 0 THEN NO FURTHER
*                            PROCESSING NEEDED
*
* IF TOP 4 BITS = 8 OR C, THEN THERE ARE TWO CLASSES
* OF INSTRUCTIONS: 2 BYTE INSTRUCTIONS AND
* CE, 8C AND 8E WHICH ARE 3 BYTE INSTRUCTIONS
*
       LDAA   #2       # BYTES IN MOST OF 8# INSTRUCTIONS
       CMPB   #$8C     3 BYTE INSTRUCTION?
       BEQ    OPBT3    YES, UPDATE A
       CMPB   #$CE     3 BYTE INSTR?
       BEQ    OPBT3    YES, UPDATE A
       CMPB   #8E      3 BYTE INSTRUCTION?
       BNE    OPBTRT   NO, RETURN
*
OPBT3  INCA            # BYTES IN INSTRUCTION:=3
*
OPBTRT RTS             RETURN TO CALLER
