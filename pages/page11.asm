**********
*
* BRKSUB
*
*
* THIS ROUTINE DOES A NUMBER OF OPERATIONS HAVING
* TO DO WITH BREAKPOINTS.
*
* THE A REGISTER DETERMINES FUNCTION PERFORMED:
*
* A = -1 => BREAKS ARE PUT INTO USER'S CODE
* A =  0 => THE BREAKPOINT WHOSE ADDRESS IS IN
*           XHI, XLO IS PURGED;
*           ALL BREAKPOINTS ARE TEMPORARILY REMOVED
* A =  1 => ALL BREAKPOINTS ARE PURGED
* A =  2 => ALL BREAKPOINTS ARE PRINTED OUT
*           ALL BREAKPOINTS ARE TEMPORARILY REMOVED
* A =  3 => ALL BREAKPOINTS ARE TEMPORARILY REMOVED
* A =  4 => THE BREAK ADDRESS IN XHI, XLO IS
*           PUT INTO THE FIRST ZERO BREAKPOINT
*           POSITION; ALL BREAKS ARE TEMPORARILY REMOVED
*
**********
*
BRKSUB EQU    *
       STS    SSAVE    SAVE S SO WE CAN USE
       STAA   ASAVE    A HOLDS THE FUNCTION #
*
       LDX    #BRKADR  INIT X FOR LOOP THROUGH BREAKS
*
* START OF LOOP THROUGH BREAK ADDRESSES
*
BRKLP  LDAA   ASAVE    GET FUNCTION #
       LDS    0,X      S:=NEXT ADDRESS IN BRRKPT LIST
       BEQ    LN       IF 0, THEN NOT A VALID BREAK
*
       TST    BRKSIN   ARE BREAKS IN USER'S CODE?
       BEQ    NOBRIN   BRANCH, IF NOT
*
* BREAKS ARE IN USER'S CODE
*
       TSTA            SHOULD BREAKS BE IN?
       BMI    BKDONE   YES, RETURN TO CALLER
*
* BREAKS ARE TO BE TAKEN OUT OF USER'S
* CODE TEMPORARILY
*
BRK2   LDAA   2*NBRBPT,X GET INSTR. BELONG-
*                            ING IN USER CODE
       PSHA            PUT IT THERE
*
* OTHER LOOP ACTIONS TO BE PERFORMED EACH TIME THROUGH
* LOOP WHEN BREAK ADDRESS NOT EQUAL TO 0.
*
BKCON1 LDAA   ASAVE    WHAT FUNCTION IS TO BE DONE
       BEQ    FNDRPL   SEE IF BREAKPOINT NEEDS TO
*                            BE REPLACED
       CMPA   #1       IS BREAK ADDRESS TO BE RESET?
